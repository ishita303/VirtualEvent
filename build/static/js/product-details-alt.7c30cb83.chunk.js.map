{"version":3,"sources":["containers/navs/Breadcrumb.js","data/comments.js","components/common/Rating.js","components/cards/RadialProgressCard.js","helpers/ThemeColors.js","components/charts/util.js","components/charts/config.js","components/charts/Area.js","components/charts/SmallLine.js","data/charts.js","containers/dashboards/SmallLineCharts.js","containers/dashboards/WebsiteVisitsChartCard.js","containers/dashboards/NewComments.js","data/orders.js","containers/pages/Orders.js","views/app/pages/product/details-alt.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","key","active","to","BreadcrumbContainer","heading","comments","title","detail","thumb","rate","commentWithLikesData","name","date","likes","Star","props","starProps","nameMap","isDisabled","isActive","isActiveHalf","willBeActive","Object","keys","prop","join","defaultProps","Rating","React","memo","percent","isSortable","Card","CardHeader","CardBody","CardTitle","strokeWidth","value","text","ThemeColors","rootStyle","getComputedStyle","document","body","themeColor1","getPropertyValue","trim","themeColor2","themeColor3","themeColor4","themeColor5","themeColor6","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4_10","themeColor5_10","themeColor6_10","primaryColor","foregroundColor","separatorColor","chartTooltip","backgroundColor","titleFontColor","borderColor","borderWidth","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","areaChartOptions","legend","display","responsive","maintainAspectRatio","tooltips","scales","yAxes","gridLines","lineWidth","color","drawBorder","ticks","beginAtZero","stepSize","min","max","padding","xAxes","smallLineChartOptions","layout","left","right","top","bottom","Area","data","shadow","chartContainer","useRef","useState","setChartInstance","useEffect","current","Chart","defaults","lineWithShadow","line","controllers","extend","draw","ease","prototype","call","this","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","stroke","apply","arguments","restore","context","getContext","newChartInstance","type","options","ref","addCommas","nStr","x1","x2","rgx","test","replace","Scatter","currentValue","setCurrentValue","currentLabel","setCurrentLabel","changeState","yLabel","xLabel","lineWithLine","tooltip","_active","tooltipPosition","topY","bottomY","beginPath","moveTo","lineTo","strokeStyle","intersect","enabled","custom","tooltipModel","dataPoints","label","lines","plugins","afterInit","_options","datasets","labels","colors","areaChartData","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","fill","smallChartData1","datalabels","align","anchor","smallChartData2","smallChartData3","smallChartData4","SmallLineCharts","itemClass","Row","xxs","SmallLine","WebsiteVisitsChartCard","controls","IntlMessages","UncontrolledDropdown","DropdownToggle","caret","outline","DropdownMenu","DropdownItem","NewComments","displayRate","suppressScrollX","wheelPropagation","item","src","alt","total","rating","interactive","orders","address","statusColor","status","OrderItem","location","Badge","pill","Orders","order","injectIntl","intl","activeTab","setActiveTab","messages","size","header","disabled","divider","Breadcrumb","Nav","tabs","NavItem","classnames","onClick","TabContent","TabPane","tabId","lg","Button"],"mappings":"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","file":"static/js/product-details-alt.7c30cb83.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","export const comments = [\n  {\n    title: 'Very informative content, thank you. ',\n    detail: 'Mayra Sibley | Tea Loaf with Fresh Oranges | 17.09.2018 - 04:45',\n    thumb: '/assets/img/profiles/l-1.jpg',\n    rate: 5,\n    key: 0,\n  },\n  {\n    title: 'This article was delightful to read. Please keep them coming.',\n    detail:\n      'Barbera Castiglia | Cheesecake with Chocolate Cookies | 15.08.2018 - 01:18',\n    thumb: '/assets/img/profiles/l-2.jpg',\n    rate: 4,\n    key: 1,\n  },\n  {\n    title: 'Your post is bad and you should feel bad.',\n    detail: 'Bao Hathaway | Homemade Cheesecake | 26.07.2018 - 11:14',\n    thumb: '/assets/img/profiles/l-3.jpg',\n    rate: 5,\n    key: 2,\n  },\n  {\n    title: 'Very original idea!',\n    detail: 'Lenna Majeed | Tea Loaf with Fresh Oranges | 17.06.2018 - 09:20',\n    thumb: '/assets/img/profiles/l-4.jpg',\n    rate: 3,\n    key: 3,\n  },\n  {\n    title: 'This article was delightful to read. Please keep them coming.',\n    detail:\n      'Esperanza Lodge | Cheesecake with Fresh Berries | 16.06.2018 - 16:45',\n    thumb: '/assets/img/profiles/l-5.jpg',\n    rate: 2,\n    key: 4,\n  },\n  {\n    title: 'Nah, did not like it.',\n    detail: '24.07.2018 - 15:00',\n    thumb: '/assets/img/profiles/l-2.jpg',\n    rate: 5,\n    key: 5,\n  },\n  {\n    title: 'Laree Munsch',\n    detail: 'Brynn Bragg | Wedding Cake with Flowers | 12.04.2018 - 12:45',\n    thumb: '/assets/img/profiles/l-1.jpg',\n    rate: 4,\n    key: 6,\n  },\n];\n\nexport const commentWithLikesData = [\n  {\n    name: 'Mimi Carreira',\n    detail: 'Pellentesque quis cursus mauris.',\n    date: 'An hour ago',\n    thumb: '/assets/img/profiles/l-1.jpg',\n    likes: 2,\n    key: 0,\n  },\n  {\n    name: 'Kathryn Mengel',\n    detail:\n      'Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque quis cursus mauris. Nam in ornare erat. Vestibulum convallis enim ac massa dapibus consectetur. Maecenas facilisis eros ac felis mattis, eget auctor sapien varius.',\n    date: 'Two hours ago',\n    thumb: '/assets/img/profiles/l-3.jpg',\n    likes: 1,\n    key: 1,\n  },\n  {\n    name: 'Philip Nelms',\n    detail:\n      'Quisque consectetur lectus eros, sed sodales libero ornare cursus. Etiam elementum ut dolor eget hendrerit. Suspendisse eu lacus eu eros lacinia feugiat sit amet non purus.',\n    date: 'Two hours ago',\n    thumb: '/assets/img/profiles/l-4.jpg',\n    likes: 5,\n    key: 2,\n  },\n  {\n    name: 'Velva Valdovinos',\n    detail:\n      'Nulla non purus fermentum, pulvinar dui condimentum, malesuada nibh. Sed viverra quam urna, at condimentum ante viverra non. Mauris posuere erat sapien, a convallis libero lobortis sit amet. Suspendisse in orci tellus.',\n    date: 'A day ago',\n    thumb: '/assets/img/profiles/l-5.jpg',\n    likes: 0,\n    key: 3,\n  },\n  {\n    name: 'Latarsha Gama',\n    detail:\n      'Taking seamless key performance indicators offline to maximise the long tail.',\n    date: 'Five days ago',\n    thumb: '/assets/img/profiles/l-7.jpg',\n    likes: 0,\n    key: 4,\n  },\n  {\n    name: 'Laree Munsch',\n    detail:\n      'Quisque consectetur lectus eros, sed sodales libero ornare cursus. Etiam elementum ut dolor eget hendrerit. Suspendisse eu lacus eu eros lacinia feugiat sit amet non purus.',\n    date: 'Six days ago',\n    thumb: '/assets/img/profiles/l-2.jpg',\n    likes: 14,\n    key: 5,\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rater from 'react-rater';\nimport 'react-rater/lib/react-rater.css';\n\nconst Rating = (props) => (\n  <Rater {...props}>\n    <Star />\n  </Rater>\n);\n\nconst Star = (props) => {\n  const starProps = { ...props };\n  const nameMap = {\n    isDisabled: 'is-disabled',\n    isActive: 'is-active',\n    isActiveHalf: 'is-active-half',\n    willBeActive: 'will-be-active',\n  };\n\n  const className = Object.keys(nameMap)\n    // eslint-disable-next-line\n    .filter((prop) => (delete starProps[prop], props[prop]))\n    .map((prop) => nameMap[prop])\n    .join(' ');\n  return <div className={`react-rater-star ${className}`} {...starProps} />;\n};\n\nStar.defaultProps = {\n  willBeActive: false,\n  isActive: false,\n  isActiveHalf: false,\n  isDisabled: false,\n};\n\nStar.propTypes = {\n  isActive: PropTypes.bool,\n  isActiveHalf: PropTypes.bool,\n  willBeActive: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nexport default Rating;\n","import React from 'react';\nimport { Card, CardBody, CardTitle, CardHeader } from 'reactstrap';\nimport { CircularProgressbar } from 'react-circular-progressbar';\n\nconst RadialProgressCard = ({\n  title = 'title',\n  percent = 50,\n  isSortable = false,\n}) => {\n  return (\n    <Card>\n      {isSortable && (\n        <CardHeader className=\"p-0 position-relative\">\n          <div className=\"position-absolute handle card-icon\">\n            <i className=\"simple-icon-shuffle\" />\n          </div>\n        </CardHeader>\n      )}\n      <CardBody className=\"d-flex justify-content-between align-items-center\">\n        <CardTitle className=\"mb-0\">{title}</CardTitle>\n        <div className=\"progress-bar-circle\">\n          <CircularProgressbar\n            strokeWidth={4}\n            value={percent}\n            text={`${percent}%`}\n          />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\nexport default React.memo(RadialProgressCard);\n","export const ThemeColors = () => {\n  const rootStyle = getComputedStyle(document.body);\n  return {\n    themeColor1: rootStyle.getPropertyValue('--theme-color-1').trim(),\n    themeColor2: rootStyle.getPropertyValue('--theme-color-2').trim(),\n    themeColor3: rootStyle.getPropertyValue('--theme-color-3').trim(),\n    themeColor4: rootStyle.getPropertyValue('--theme-color-4').trim(),\n    themeColor5: rootStyle.getPropertyValue('--theme-color-5').trim(),\n    themeColor6: rootStyle.getPropertyValue('--theme-color-6').trim(),\n    themeColor1_10: rootStyle.getPropertyValue('--theme-color-1-10').trim(),\n    themeColor2_10: rootStyle.getPropertyValue('--theme-color-2-10').trim(),\n    themeColor3_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor4_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor5_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor6_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    primaryColor: rootStyle.getPropertyValue('--primary-color').trim(),\n    foregroundColor: rootStyle.getPropertyValue('--foreground-color').trim(),\n    separatorColor: rootStyle.getPropertyValue('--separator-color').trim(),\n  };\n};\n","import { ThemeColors } from '../../helpers/ThemeColors';\n\nexport const chartTooltip = {\n  backgroundColor: ThemeColors().foregroundColor,\n  titleFontColor: ThemeColors().primaryColor,\n  borderColor: ThemeColors().separatorColor,\n  borderWidth: 0.5,\n  bodyFontColor: ThemeColors().primaryColor,\n  bodySpacing: 10,\n  xPadding: 15,\n  yPadding: 15,\n  cornerRadius: 0.15,\n};\n\nexport const centerTextPlugin = {\n  afterDatasetsUpdate(chart) {},\n  beforeDraw(chart) {\n    const width = chart.chartArea.right;\n    const height = chart.chartArea.bottom;\n    const { ctx } = chart.chart;\n    ctx.restore();\n\n    let activeLabel = chart.data.labels[0];\n    let activeValue = chart.data.datasets[0].data[0];\n    let dataset = chart.data.datasets[0];\n    let meta = dataset._meta[Object.keys(dataset._meta)[0]];\n    let { total } = meta;\n\n    let activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n    activePercentage = chart.legend.legendItems[0].hidden\n      ? 0\n      : activePercentage;\n\n    if (chart.pointAvailable) {\n      activeLabel = chart.data.labels[chart.pointIndex];\n      activeValue =\n        chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex];\n\n      dataset = chart.data.datasets[chart.pointDataIndex];\n      meta = dataset._meta[Object.keys(dataset._meta)[0]];\n      total = meta.total;\n      activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n      activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\n        ? 0\n        : activePercentage;\n    }\n\n    ctx.font = '36px Nunito, sans-serif';\n    ctx.fillStyle = ThemeColors().primaryColor;\n    ctx.textBaseline = 'middle';\n\n    const text = `${activePercentage}%`;\n    const textX = Math.round((width - ctx.measureText(text).width) / 2);\n    const textY = height / 2;\n    ctx.fillText(text, textX, textY);\n\n    ctx.font = '14px Nunito, sans-serif';\n    ctx.textBaseline = 'middle';\n\n    const text2 = activeLabel;\n    const textX2 = Math.round((width - ctx.measureText(text2).width) / 2);\n    const textY2 = height / 2 - 30;\n    ctx.fillText(text2, textX2, textY2);\n\n    ctx.save();\n  },\n  beforeEvent(chart, event, options) {\n    const firstPoint = chart.getElementAtEvent(event)[0];\n\n    if (firstPoint) {\n      chart.pointIndex = firstPoint._index;\n      chart.pointDataIndex = firstPoint._datasetIndex;\n      chart.pointAvailable = true;\n    }\n  },\n};\n","import { chartTooltip } from './util';\n\nexport const lineChartOptions = {\n  legend: {\n    display: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 5,\n          min: 50,\n          max: 70,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\nexport const polarAreaChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const areaChartOptions = {\n  legend: {\n    display: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 5,\n          min: 50,\n          max: 70,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\nexport const scatterChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 20,\n          min: -80,\n          max: 80,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n\n  // legend: {\n  //   position: 'bottom',\n  //   labels: {\n  //     padding: 30,\n  //     usePointStyle: true,\n  //     fontSize: 12,\n  //   },\n  // },\n  // responsive: true,\n  // maintainAspectRatio: false,\n  // scales: {\n  //   yAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //         drawBorder: false,\n  //       },\n  //       ticks: {\n  //         beginAtZero: true,\n  //         stepSize: 20,\n  //         min: -80,\n  //         max: 80,\n  //         padding: 20,\n  //       },\n  //     },\n  //   ],\n  //   xAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //       },\n  //     },\n  //   ],\n  // },\n};\n\nexport const barChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 100,\n          min: 300,\n          max: 800,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n};\n\nexport const radarChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const pieChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const doughnutChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  cutoutPercentage: 80,\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const smallLineChartOptions = {\n  layout: {\n    padding: {\n      left: 5,\n      right: 5,\n      top: 10,\n      bottom: 10,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n        display: false,\n      },\n    ],\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n  },\n};\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { areaChartOptions } from './config';\n\nconst Area = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.lineWithShadow = Chart.defaults.line;\n        Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\n          draw(ease) {\n            Chart.controllers.line.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            ctx.stroke();\n            Chart.controllers.line.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'lineWithShadow' : 'line',\n        options: areaChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Area;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { smallLineChartOptions } from './config';\n\nconst addCommas = (nStr) => {\n  nStr += '';\n  const x = nStr.split('.');\n  let x1 = x[0];\n  const x2 = x.length > 1 ? `.${x[1]}` : '';\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1,$2');\n  }\n  return x1 + x2;\n};\n\nconst Scatter = ({ data }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n  const [currentValue, setCurrentValue] = useState('');\n  const [currentLabel, setCurrentLabel] = useState('');\n\n  const changeState = (yLabel, xLabel) => {\n    setCurrentValue(yLabel);\n    setCurrentLabel(xLabel);\n  };\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      Chart.controllers.lineWithLine = Chart.controllers.line;\n      Chart.controllers.lineWithLine = Chart.controllers.line.extend({\n        draw(ease) {\n          Chart.controllers.line.prototype.draw.call(this, ease);\n          const {\n            chart: { ctx, tooltip, scales },\n          } = this;\n\n          if (tooltip._active && tooltip._active[0]) {\n            const activePoint = tooltip._active[0];\n            const { x } = activePoint.tooltipPosition();\n            const topY = scales['y-axis-0'].top;\n            const bottomY = scales['y-axis-0'].bottom;\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(x, topY);\n            ctx.lineTo(x, bottomY);\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = 'rgba(0,0,0,0.1)';\n            ctx.stroke();\n            ctx.restore();\n          }\n        },\n      });\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: 'lineWithLine',\n        options: {\n          ...smallLineChartOptions,\n          tooltips: {\n            intersect: false,\n            enabled: false,\n            custom(tooltipModel) {\n              if (tooltipModel && tooltipModel.dataPoints) {\n                const { yLabel } = tooltipModel.dataPoints[0];\n                const { xLabel } = tooltipModel.dataPoints[0];\n                const label = tooltipModel.body[0].lines[0].split(':')[0];\n                changeState(`$${addCommas(yLabel)}`, `${label}-${xLabel}`);\n              }\n            },\n          },\n        },\n        plugins: [\n          {\n            afterInit(chart, _options) {\n              const yLabel = chart.data.datasets[0].data[0];\n              const xLabel = chart.data.labels[0];\n              const { label } = chart.data.datasets[0];\n              changeState(`$${addCommas(yLabel)}`, `${label}-${xLabel}`);\n            },\n          },\n        ],\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data]);\n\n  return (\n    <>\n      <div>\n        <p className=\"lead color-theme-1 mb-1 value\">{currentValue}</p>\n        <p className=\"mb-0 label text-small\">{currentLabel}</p>\n      </div>\n      <div className=\"chart\">\n        <canvas ref={chartContainer} />\n      </div>\n    </>\n  );\n};\n\nexport default Scatter;\n","import { ThemeColors } from '../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\nexport const lineChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [54, 63, 60, 65, 60, 68, 60],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n  ],\n};\n\nexport const polarAreaChartData = {\n  labels: ['Sales', 'Orders', 'Stock'],\n  datasets: [\n    {\n      data: [80, 90, 70],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n      ],\n    },\n  ],\n};\n\nexport const areaChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [54, 63, 60, 65, 60, 68, 60],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 4,\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      backgroundColor: colors.themeColor1_10,\n    },\n  ],\n};\n\nexport const scatterChartData = {\n  datasets: [\n    {\n      borderWidth: 2,\n      showLine: false,\n      label: 'Cakes',\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [\n        { x: 62, y: -78 },\n        { x: -0, y: 74 },\n        { x: -67, y: 45 },\n        { x: -26, y: -43 },\n        { x: -15, y: -30 },\n        { x: 65, y: -68 },\n        { x: -28, y: -61 },\n      ],\n    },\n    {\n      borderWidth: 2,\n      showLine: false,\n      label: 'Desserts',\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [\n        { x: 79, y: 62 },\n        { x: 62, y: 0 },\n        { x: -76, y: -81 },\n        { x: -51, y: 41 },\n        { x: -9, y: 9 },\n        { x: 72, y: -37 },\n        { x: 62, y: -26 },\n      ],\n    },\n  ],\n};\n\nexport const barChartData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n  datasets: [\n    {\n      label: 'Cakes',\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [456, 479, 324, 569, 702, 600],\n      borderWidth: 2,\n    },\n    {\n      label: 'Desserts',\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [364, 504, 605, 400, 345, 320],\n      borderWidth: 2,\n    },\n  ],\n};\n\nexport const radarChartData = {\n  datasets: [\n    {\n      label: 'Stock',\n      borderWidth: 2,\n      pointBackgroundColor: colors.themeColor1,\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [80, 90, 70],\n    },\n    {\n      label: 'Order',\n      borderWidth: 2,\n      pointBackgroundColor: colors.themeColor2,\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [68, 80, 95],\n    },\n  ],\n  labels: ['Cakes', 'Desserts', 'Cupcakes'],\n};\n\nexport const pieChartData = {\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n      ],\n      borderWidth: 2,\n      data: [15, 25, 20],\n    },\n  ],\n};\n\nexport const doughnutChartData = {\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [colors.themeColor3, colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n        colors.themeColor1_10,\n      ],\n      borderWidth: 2,\n      data: [15, 25, 20],\n    },\n  ],\n};\n\nexport const smallChartData1 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [1250, 1300, 1550, 921, 1810, 1106, 1610],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData2 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Pending Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [115, 120, 300, 222, 105, 85, 36],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData3 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [350, 452, 762, 952, 630, 85, 158],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData4 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [200, 452, 250, 630, 125, 85, 20],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const conversionChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [65, 60, 68, 60, 58, 63, 60],\n      borderColor: colors.themeColor2,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor2,\n      pointHoverBackgroundColor: colors.themeColor2,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 4,\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      backgroundColor: colors.themeColor2_10,\n    },\n  ],\n};\n","import React from 'react';\nimport { Row, Card, CardBody } from 'reactstrap';\n\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport { SmallLineChart } from '../../components/charts';\n\nimport {\n  smallChartData1,\n  smallChartData2,\n  smallChartData3,\n  smallChartData4,\n} from '../../data/charts';\n\nconst SmallLineCharts = ({ itemClass = 'dashboard-small-chart' }) => {\n  return (\n    <Row>\n      <Colxx xxs=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <SmallLineChart data={smallChartData1} />\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <SmallLineChart data={smallChartData2} />\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <SmallLineChart data={smallChartData3} />\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <SmallLineChart data={smallChartData4} />\n          </CardBody>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default SmallLineCharts;\n","import React from 'react';\nimport {\n  Card,\n  CardBody,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n} from 'reactstrap';\n\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { AreaChart } from '../../components/charts';\n\nimport { areaChartData } from '../../data/charts';\n\nconst WebsiteVisitsChartCard = ({ className = '', controls = true }) => {\n  return (\n    <Card className={`${className} dashboard-filled-line-chart`}>\n      <CardBody>\n        <div className=\"float-left float-none-xs\">\n          <div className=\"d-inline-block\">\n            <h5 className=\"d-inline\">\n              <IntlMessages id=\"dashboards.website-visits\" />\n            </h5>\n            <span className=\"text-muted text-small d-block\">\n              <IntlMessages id=\"dashboards.unique-visitors\" />\n            </span>\n          </div>\n        </div>\n        {controls && (\n          <div className=\"btn-group float-right float-none-xs mt-2\">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboards.this-week\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboards.last-week\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboards.this-month\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n      </CardBody>\n\n      <div className=\"chart card-body pt-0\">\n        <AreaChart shadow data={areaChartData} />\n      </div>\n    </Card>\n  );\n};\n\nexport default WebsiteVisitsChartCard;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { NavLink } from 'react-router-dom';\n\nimport IntlMessages from '../../helpers/IntlMessages';\n\nimport { comments } from '../../data/comments';\nimport Rating from '../../components/common/Rating';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst NewComments = ({ className = '', displayRate = false }) => {\n  return (\n    <Card className={className}>\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboards.new-comments\" />\n        </CardTitle>\n        <div className=\"dashboard-list-with-user\">\n          <PerfectScrollbar\n            options={{ suppressScrollX: true, wheelPropagation: false }}\n          >\n            {comments.map((item, index) => {\n              return (\n                <div\n                  key={index}\n                  className=\"d-flex flex-row mb-3 pb-3 border-bottom\"\n                >\n                  <NavLink to={`${adminRoot}/pages/product/details`}>\n                    <img\n                      src={item.thumb}\n                      alt={item.title}\n                      className=\"img-thumbnail border-0 rounded-circle list-thumbnail align-self-center xsmall\"\n                    />\n                  </NavLink>\n\n                  <div className=\"pl-3 pr-2\">\n                    <NavLink to={`${adminRoot}/pages/product/details`}>\n                      <p className=\"font-weight-medium mb-0\">{item.title}</p>\n                      <p className=\"text-muted mb-0 text-small\">\n                        {item.detail}\n                      </p>\n                      {displayRate && (\n                        <div className=\"form-group mb-1 mt-2\">\n                          <Rating total={5} rating={5} interactive={false} />\n                        </div>\n                      )}\n                    </NavLink>\n                  </div>\n                </div>\n              );\n            })}\n          </PerfectScrollbar>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default NewComments;\n","const orders = [\n  {\n    name: 'Marty Otte',\n    address: 'Kansas City, USA',\n    date: '02.01.2019',\n    statusColor: 'secondary',\n    status: 'ON HOLD',\n  },\n  {\n    name: 'Linn Ronning',\n    address: 'Toronto, Canada',\n    date: '02.04.2018',\n    statusColor: 'primary',\n    status: 'PROCESSED',\n  },\n  {\n    name: 'Rasheeda Vaquera',\n    address: 'Kühndorf, Germany',\n    date: '02.02.2019',\n    statusColor: 'primary',\n    status: 'PROCESSED',\n  },\n  {\n    name: 'Esperanza Lodge',\n    address: 'Montluçon, France',\n    date: '20.03.2018',\n    statusColor: 'primary',\n    status: 'PROCESSED',\n  },\n  {\n    name: 'Ken Ballweg',\n    address: 'Birmingham, UK',\n    date: '17.02.2018',\n    statusColor: 'secondary',\n    status: 'ON HOLD',\n  },\n];\nexport default orders;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Row, Card, CardBody, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport orders from '../../data/orders';\n\nconst OrderItem = ({ name, address, date, status, statusColor }) => {\n  return (\n    <Card className=\"d-flex flex-row mb-3\">\n      <div className=\"d-flex flex-grow-1 min-width-zero\">\n        <CardBody className=\"align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n          <NavLink\n            to=\"#\"\n            location={{}}\n            className=\"list-item-heading mb-1 truncate w-40 w-xs-100\"\n          >\n            {name}\n          </NavLink>\n          <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">{address}</p>\n          <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">{date}</p>\n\n          <div className=\"w-15 w-xs-100 text-right\">\n            <Badge color={statusColor} pill>\n              {status}\n            </Badge>\n          </div>\n        </CardBody>\n      </div>\n    </Card>\n  );\n};\n\nconst Orders = () => {\n  return (\n    <Row>\n      <Colxx>\n        {orders.map((order, index) => {\n          return <OrderItem key={`order_${index}`} {...order} />;\n        })}\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default Orders;\n","import React, { useState } from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  Nav,\n  NavItem,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  TabContent,\n  TabPane,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { injectIntl } from 'react-intl';\nimport Rating from '../../../../components/common/Rating';\n\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport RadialProgressCard from '../../../../components/cards/RadialProgressCard';\nimport SmallLineCharts from '../../../../containers/dashboards/SmallLineCharts';\nimport WebsiteVisitsChartCard from '../../../../containers/dashboards/WebsiteVisitsChartCard';\nimport NewComments from '../../../../containers/dashboards/NewComments';\nimport Orders from '../../../../containers/pages/Orders';\n\nconst DetailsAltPages = ({ match, intl }) => {\n  const [activeTab, setActiveTab] = useState('details');\n\n  const { messages } = intl;\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <h1>Chocolate Cake</h1>\n          <div className=\"text-zero top-right-button-container\">\n            <UncontrolledDropdown>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                size=\"lg\"\n                outline\n                className=\"top-right-button top-right-button-single\"\n              >\n                <IntlMessages id=\"pages.actions\" />\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>\n                  <IntlMessages id=\"pages.header\" />\n                </DropdownItem>\n                <DropdownItem disabled>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n\n          <Breadcrumb match={match} />\n\n          <Nav tabs className=\"separator-tabs ml-0 mb-5\">\n            <NavItem>\n              <NavLink\n                location={{}}\n                to=\"#\"\n                className={classnames({\n                  active: activeTab === 'details',\n                  'nav-link': true,\n                })}\n                onClick={() => setActiveTab('details')}\n              >\n                <IntlMessages id=\"pages.details\" />\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                location={{}}\n                to=\"#\"\n                className={classnames({\n                  active: activeTab === 'orders',\n                  'nav-link': true,\n                })}\n                onClick={() => setActiveTab('orders')}\n              >\n                <IntlMessages id=\"pages.orders\" />\n              </NavLink>\n            </NavItem>\n          </Nav>\n\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"details\">\n              <Row>\n                <Colxx xxs=\"12\" lg=\"4\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                    <div className=\"position-absolute card-top-buttons\">\n                      <Button outline color=\"white\" className=\"icon-button\">\n                        <i className=\"simple-icon-pencil\" />\n                      </Button>\n                    </div>\n                    <img\n                      src=\"/assets/img/details/1.jpg\"\n                      alt=\"Detail\"\n                      className=\"card-img-top\"\n                    />\n\n                    <CardBody>\n                      <p className=\"text-muted text-small mb-2\">\n                        <IntlMessages id=\"pages.description\" />\n                      </p>\n                      <p className=\"mb-3\">\n                        It’s all about simplicity…Less is more. Chocolate Cake\n                        exclusively brings you the classic chocolate cake. This\n                        cake is the one you always dream of-moist cake and\n                        creamy chocolate frosting.\n                        <br />\n                        <br /> This cake proudly serves itself for a family\n                        gathering, a dinner party, a birthday celebration, a\n                        baby christening, and a gift to someone special or\n                        simply to have on hand on the cake stand at home served\n                        with an ice cold glass of milk!\n                      </p>\n\n                      <p className=\"text-muted text-small mb-2\">\n                        <IntlMessages id=\"pages.rating\" />\n                      </p>\n                      <div className=\"mb-3\">\n                        <Rating total={5} rating={5} interactive={false} />\n                      </div>\n\n                      <p className=\"text-muted text-small mb-2\">\n                        <IntlMessages id=\"pages.price\" />\n                      </p>\n                      <p className=\"mb-3\">$8,14</p>\n                      <p className=\"text-muted text-small mb-2\">\n                        <IntlMessages id=\"pages.ingredients\" />\n                      </p>\n                      <div className=\"mb-3\">\n                        <p className=\"d-sm-inline-block mb-1\">\n                          <Badge color=\"outline-secondary mb-1 mr-1\" pill>\n                            Flour\n                          </Badge>\n                          <Badge color=\"outline-secondary mb-1 mr-1\" pill>\n                            Chocolate\n                          </Badge>\n                          <Badge color=\"outline-secondary mb-1 mr-1\" pill>\n                            Caster Sugar\n                          </Badge>\n                          <Badge color=\"outline-secondary mb-1 mr-1\" pill>\n                            Baking Powder\n                          </Badge>\n                          <Badge color=\"outline-secondary mb-1 mr-1\" pill>\n                            Milk\n                          </Badge>\n                          <Badge color=\"outline-secondary mb-1 mr-1\" pill>\n                            Eggs\n                          </Badge>\n                          <Badge color=\"outline-secondary mb-1 mr-1\" pill>\n                            Vegetable Oil\n                          </Badge>\n                        </p>\n                      </div>\n\n                      <p className=\"text-muted text-small mb-2\">\n                        <IntlMessages id=\"pages.is-vegan\" />\n                      </p>\n                      <p>No</p>\n                    </CardBody>\n                  </Card>\n                  <Row>\n                    <Colxx xxs=\"12\" className=\"mb-4\">\n                      <RadialProgressCard\n                        className=\"mb-4\"\n                        title={messages['pages.order-status']}\n                        percent={85}\n                        isSortable={false}\n                      />\n                    </Colxx>\n                    <Colxx xxs=\"12\" className=\"mb-4\">\n                      <RadialProgressCard\n                        className=\"mb-4\"\n                        title={messages['pages.order-status']}\n                        percent={40}\n                        isSortable={false}\n                      />\n                    </Colxx>\n                  </Row>\n                </Colxx>\n\n                <Colxx xxs=\"12\" lg=\"8\">\n                  <SmallLineCharts itemClass=\"dashboard-small-chart-analytics\" />\n                  <WebsiteVisitsChartCard className=\"mb-4\" controls={false} />\n                  <NewComments className=\"mb-4\" displayRate />\n                </Colxx>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"orders\">\n              <Orders />\n            </TabPane>\n          </TabContent>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default injectIntl(DetailsAltPages);\n"],"sourceRoot":""}