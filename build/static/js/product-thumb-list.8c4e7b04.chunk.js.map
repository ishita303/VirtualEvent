{"version":3,"sources":["containers/navs/Breadcrumb.js","components/common/CustomSelectInput.js","containers/pages/Pagination.js","containers/pages/ListPageHeading.js","containers/pages/AddNewModal.js","hooks/use-mousetrap.js","containers/pages/ContextMenuContainer.js","containers/pages/DataListView.js","containers/pages/ImageListView.js","containers/pages/ThumbListView.js","containers/pages/ListPageListing.js","views/app/pages/product/thumb-list.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","key","active","to","BreadcrumbContainer","heading","CustomSelectInput","props","customProps","autoCorrect","autoCapitalize","Input","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","onClick","injectIntl","intl","displayMode","changeDisplayMode","changePageSize","handleChangeSelectAll","changeOrderBy","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","endIndex","onSearchKey","selectedItemsLength","itemsLength","pageSizes","orderOptions","toggleModal","useState","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","color","size","isOpen","href","type","name","placeholder","onKeyPress","e","caret","right","AddNewModal","modalOpen","categories","toggle","wrapClassName","backdrop","components","classNamePrefix","options","label","outline","handlerKey","handlerCallback","actionRef","useRef","current","useEffect","mousetrap","bind","evt","combo","preventDefault","unbind","ContextMenuContainer","onContextMenu","onContextMenuClick","onShow","detail","data","action","React","memo","product","isSelect","collect","onCheckItem","Card","event","classnames","title","category","date","Badge","statusColor","pill","status","CustomInput","checked","onChange","sm","lg","xl","CardImg","top","alt","src","img","CardBody","Row","CardSubtitle","CardText","items","selectedItems","includes","getIndex","value","arr","prop","apiUrl","servicePath","column","ThumbListPages","isLoaded","setIsLoaded","setDisplayMode","setCurrentPage","setSelectedPageSize","setSelectedOrderOption","setModalOpen","setTotalItemCount","setTotalPage","search","setSearch","setSelectedItems","setItems","lastChecked","setLastChecked","a","axios","get","then","res","replace","totalItem","fetchData","isToggle","document","activeElement","blur","useMousetrap","find","target","toLowerCase","tagName","parentElement","selectedList","shiftKey","newItems","start","end","slice","Math","min","max","item","Array","from","Set","console","log","clickedProductId"],"mappings":"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","file":"static/js/product-thumb-list.8c4e7b04.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../navs/Breadcrumb';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nimport {\n  DataListIcon,\n  ThumbListIcon,\n  ImageListIcon,\n} from '../../components/svg';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  toggleModal,\n  heading,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            Speakers\n          </h1>\n\n          <div className=\"text-zero top-right-button-container\">\n            <Button\n              color=\"primary\"\n              size=\"lg\"\n              className=\"top-right-button\"\n              onClick={() => toggleModal()}\n            >\n              Add New\n            </Button>\n            {'  '}\n            \n          </div>\n          <Breadcrumb match={match} />\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'list' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('list')}\n              >\n                <DataListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                <input\n                  type=\"text\"\n                  name=\"keyword\"\n                  id=\"search\"\n                  placeholder={messages['menu.search']}\n                  onKeyPress={(e) => onSearchKey(e)}\n                />\n              </div>\n            </div>\n            <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../components/common/CustomSelectInput';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"pages.add-new-modal-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label>\n          <IntlMessages id=\"pages.product-name\" />\n        </Label>\n        <Input />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.description\" />\n        </Label>\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"ON HOLD\"\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio\"\n          label=\"PROCESSED\"\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"pages.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={toggleModal}>\n          <IntlMessages id=\"pages.submit\" />\n        </Button>{' '}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddNewModal;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\n\nconst ContextMenuContainer = ({ onContextMenu, onContextMenuClick }) => {\n  return (\n    <ContextMenu id=\"menu_id\" onShow={(e) => onContextMenu(e, e.detail.data)}>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'copy' }}>\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'move' }}>\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'delete' }}>\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst DataListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(DataListView);\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <NavLink to={`?p=${product.id}`} className=\"d-flex\">\n            <img\n              alt={product.title}\n              src={product.img}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </NavLink>\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ThumbListView);\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport Pagination from './Pagination';\nimport ContextMenuContainer from './ContextMenuContainer';\nimport DataListView from './DataListView';\nimport ImageListView from './ImageListView';\nimport ThumbListView from './ThumbListView';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  return (\n    <Row>\n      {items.map((product) => {\n        if (displayMode === 'imagelist') {\n          return (\n            <ImageListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        if (displayMode === 'thumblist') {\n          return (\n            <ThumbListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        return (\n          <DataListView\n            key={product.id}\n            product={product}\n            isSelect={selectedItems.includes(product.id)}\n            onCheckItem={onCheckItem}\n            collect={collect}\n          />\n        );\n      })}\n      <Pagination\n        currentPage={currentPage}\n        totalPage={totalPage}\n        onChangePage={(i) => onChangePage(i)}\n      />\n      <ContextMenuContainer\n        onContextMenuClick={onContextMenuClick}\n        onContextMenu={onContextMenu}\n      />\n    </Row>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { servicePath } from '../../../../constants/defaultValues';\n\nimport ListPageHeading from '../../../../containers/pages/ListPageHeading';\nimport AddNewModal from '../../../../containers/pages/AddNewModal';\nimport ListPageListing from '../../../../containers/pages/ListPageListing';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst apiUrl = `${servicePath}/cakes/paging`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [4, 8, 12, 20];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\n\nconst ThumbListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    async function fetchData() {\n      axios\n        .get(\n          `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\n        )\n        .then((res) => {\n          return res.data;\n        })\n        .then((data) => {\n          setTotalPage(data.totalPage);\n          setItems(data.data.map(x=>{ return { ...x,img : x.img.replace(\"img/\",\"img/products/\")}}));\n          setSelectedItems([]);\n          setTotalItemCount(data.totalItem);\n          setIsLoaded(true);\n        });\n    }\n    fetchData();\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"menu.thumb-list\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n        />\n        <AddNewModal\n          modalOpen={modalOpen}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          categories={categories}\n        />\n        <ListPageListing\n          items={items}\n          displayMode={displayMode}\n          selectedItems={selectedItems}\n          onCheckItem={onCheckItem}\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n          onChangePage={setCurrentPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n"],"sourceRoot":""}